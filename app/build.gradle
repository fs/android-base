apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply plugin: "de.mannodermaus.android-junit5"
apply from: './scripts/versioning.gradle'

def props = new Properties()
def secretFile = rootProject.file("secrets/keys.properties")
if (secretFile.exists())
    secretFile.withInputStream { props.load(it) }

detekt {
    toolVersion = "$versions.detekt"
    input = files("src/main/java")
    filters = ".*/resources/.*,.*/build/.*"
    config = files("../default-detekt-config.yml")
}

android {
    compileSdkVersion versions.TARGET_SDK_VERSION

    defaultConfig {
        applicationId "com.flatstack.android"
        minSdkVersion versions.MIN_SDK_VERSION
        targetSdkVersion versions.TARGET_SDK_VERSION
        versionCode appVersionCode.toInteger()
        versionName appVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument "runnerBuilder",
                "de.mannodermaus.junit5.AndroidJUnit5Builder"
        buildConfigField 'String', 'BASE_URL', "\"https://api.com\""
    }
    signingConfigs {
        debug {
            storeFile file("$rootDir/debug.jks")
            storePassword "12345678"
            keyAlias "debug"
            keyPassword "12345678"
        }
        release {
            keyAlias props.getProperty('keyAlias')
            keyPassword props.getProperty('keyPassword')
            storeFile file("$rootDir/secrets/keystore.jks")
            storePassword props.getProperty('storePassword')
        }
    }
    buildTypes {
        release {
            ext.betaDistributionGroupAliases = "androidbase"
            ext.betaDistributionNotifications = true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    sourceSets.each {
        it.java.srcDirs += "src/$it.name/kotlin"
    }
    testOptions {
        junitPlatform {
            filters {
                engines {
                    include 'spek2'
                }
            }
        }
    }
    lintOptions {
        warningsAsErrors true
        htmlOutput file("build/reports/lint/lint-report.html")
        xmlOutput file("build/reports/lint/lint-report.xml")
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    androidExtensions {
        experimental = true
    }
}

repositories {
    maven { url = uri("https://dl.bintray.com/kodein-framework/Kodein-DI") }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"

    implementation androidLibs
    implementation retrofitLibs
    implementation coroutinesLibs
    implementation kodeinLibs
    implementation roomLibs
    kapt compilerLibs

    testImplementation unitTestLibs
    androidTestImplementation androidTestsLibs

    //Crashlytics
    implementation('com.crashlytics.sdk.android:crashlytics:2.10.0@aar') {
        transitive = true
    }

    testRuntimeOnly "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"
}
